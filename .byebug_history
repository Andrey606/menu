continue
local.second
I18n.locale.to_s 
I18n.locale.to_s == local.second
I18n.locale
continue
I18n.available_locales.map { |l| [I18n.t(:language, locale: l), l.to_s] }
[200~I18n.available_locales.map { |l| [I18n.t(:language, locale: l), l.to_s] }~
I18n.locale
continue
locale.to_s
 PdfFile.where(locale: 'uk')
 PdfFile.last
 PdfFile.where(locale: locale.to_s)
 PdfFile.all.first.locale
 PdfFile.all
 PdfFile.where(locale: locale)
PdfFile.all
locale
PdfFile.all.where(locale: locale)
@pdf_file
@pdf_files
self
params
continue
params[:locale]
params
continue
@screen_width = params[:screenWidth].to_i
params[:screenWidth]@screen_width = params[:screenWidth].to_i
params[:screenWidth]
continue
params[:screenWidth]
params
continue
params
continue
user = User.find_by(email: params[:email])
continue
current_user
continue
I18n.available_locales.map {|l| [l.to_s]}
I18n.available_locales.map {|l| [l]}
I18n.available_locales.map {|l| l}
I18n.available_locales
locale
locales
continue
PdfFile.all.where(locale: locale).count
PdfFile.all.where(locale: locale)
locale
